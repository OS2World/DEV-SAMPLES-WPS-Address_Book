/*
 * OS/2 Work Place Shell Sample Program - ShrFolder
 *
 * Copyright (C) 1993 IBM Corporation
 *
 *   DISCLAIMER OF WARRANTIES.  The following [enclosed] code is
 *   sample code created by IBM Corporation.  This sample code is
 *   not part of any standard or IBM product and is provided to you
 *   solely for the purpose of assisting you in the development of
 *   your applications.  The code is provided "AS IS".  ALL
 *   WARRANTIES ARE EXPRESSLY DISCLAIMED, INCLUDING THE IMPLIED
 *   WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 *   PURPOSE.  IBM shall not be liable for any damages arising out
 *   of your use of the sample code, even if IBM has been advised of
 *   the possibility of such damages.
 *
 * ShrFolder is a WPFolder subclass which adds two methods:
 *
 *   shrAddedToContent
 *   shrRemovedFromContent
 *
 * Module also includes two functions that work around
 * problems found in the WPS while creating this example:
 *
 *   ShrCnrRefreshDetails
 *   ShrCheckForDeletedObject
 *
 * See WPS-PGM.TXT for more details (#7, #12, and #14).
 */

#ifndef shrfoldr_h
#define shrfoldr_h

extern VOID ShrCnrRefreshDetails(WPObject *somChangedObject);
extern BOOL ShrCheckForDeletedObject
    (HWND hwnd, ULONG msg, MPARAM mp1, MPARAM mp2);

/*
 * This remainder of this file was generated by the SOM Compiler.
 * 
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emith: 1.11
 */

#include <som.h>

/*
 * Define the class name as an object type
 */
#ifndef ShrFolder
#define ShrFolder SOMAny
#endif
#include "wpfolder.h"

/*
 * Passthru lines: File: "C.h", "after"
 */

#define ShrFolder_MajorVersion 1
#define ShrFolder_MinorVersion 2

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define ShrFolderNewClass sfdrc
#pragma linkage(sfdrc, system)
#define ShrFolderClassData sfdrd
#define ShrFolderCClassData sfdrx
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define ShrFolder_classObj ShrFolderClassData.classObject
#define _ShrFolder ShrFolder_classObj

/*
 * New and Renew macros for ShrFolder
 */
#define _ShrFolderNew() (_somNew(ShrFolderClassData.classObject))
#define ShrFolderNew() \
    ( ShrFolderClassData.classObject \
        ? _ShrFolderNew() \
        : ( ShrFolderNewClass(ShrFolder_MajorVersion, ShrFolder_MinorVersion), _ShrFolderNew() ) )
#define ShrFolderRenew(buf) \
    ( _somRenew(ShrFolderClassData.classObject, buf) )

/*
 * New Method: shrAddedToContent
 */
typedef VOID    SOMLINK somTP_ShrFolder_shrAddedToContent(ShrFolder *somSelf,
    WPObject *somAddedObject);
#pragma linkage(somTP_ShrFolder_shrAddedToContent, system)
typedef somTP_ShrFolder_shrAddedToContent *somTD_ShrFolder_shrAddedToContent;
#define somMD_ShrFolder_shrAddedToContent "----"
#define ShrFolder_shrAddedToContent(somSelf,somAddedObject) \
    (SOM_Resolve(somSelf, ShrFolder, shrAddedToContent) \
    (somSelf,somAddedObject))
#define _shrAddedToContent ShrFolder_shrAddedToContent

/*
 * New Method: shrRemovedFromContent
 */
typedef VOID    SOMLINK somTP_ShrFolder_shrRemovedFromContent(ShrFolder *somSelf,
        WPObject *somRemovedObject);
#pragma linkage(somTP_ShrFolder_shrRemovedFromContent, system)
typedef somTP_ShrFolder_shrRemovedFromContent *somTD_ShrFolder_shrRemovedFromContent;
#define somMD_ShrFolder_shrRemovedFromContent "----"
#define ShrFolder_shrRemovedFromContent(somSelf,somRemovedObject) \
    (SOM_Resolve(somSelf, ShrFolder, shrRemovedFromContent) \
    (somSelf,somRemovedObject))
#define _shrRemovedFromContent ShrFolder_shrRemovedFromContent

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMAny * SOMLINK ShrFolderNewClass(integer4 scemajorVersion,
    integer4 sceminorVersion);
#pragma linkage(ShrFolderNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct ShrFolderClassDataStructure {
    SOMAny *classObject;
    somMToken shrAddedToContent;
    somMToken shrRemovedFromContent;
} ShrFolderClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct ShrFolderCClassDataStructure {
    somMethodTab *parentMtab;
    somDToken instanceDataToken;
} ShrFolderCClassData;

#endif       /* shrfoldr_h */

#ifndef shrfoldr_mh
#define shrfoldr_mh

/*
 * Define the class name as an object type
 */
#ifndef M_ShrFolder
#define M_ShrFolder SOMAny
#endif

#define M_ShrFolder_MajorVersion 1
#define M_ShrFolder_MinorVersion 2

/*
 * External name shortening if required
 */
#ifdef SOM_USE_SHORT_EXTERNAL_NAMES
#define M_ShrFolderNewClass sfdrc
#pragma linkage(sfdrc, system)
#define M_ShrFolderClassData sfdrd
#define M_ShrFolderCClassData sfdrx
#endif /* SOM_USE_SHORT_EXTERNAL_NAMES */
/*--------------Migration------------*/
#define M_ShrFolder_classObj M_ShrFolderClassData.classObject
#define _M_ShrFolder M_ShrFolder_classObj

/*
 * New and Renew macros for M_ShrFolder
 */
#define _M_ShrFolderNew() (_somNew(M_ShrFolderClassData.classObject))
#define M_ShrFolderNew() \
    ( M_ShrFolderClassData.classObject \
        ? _M_ShrFolderNew() \
        : ( M_ShrFolderNewClass(M_ShrFolder_MajorVersion, M_ShrFolder_MinorVersion), _M_ShrFolderNew() ) )
#define M_ShrFolderRenew(buf) \
    ( _somRenew(M_ShrFolderClassData.classObject, buf) )

/*
 * Override method: wpclsInitData
 */
#define M_ShrFolder_wpclsInitData(somSelf) \
    M_WPObject_wpclsInitData(somSelf)

/*
 * Declare the class creation procedure
 */
SOMEXTERN SOMAny * SOMLINK M_ShrFolderNewClass(integer4 scemajorVersion,
        integer4 sceminorVersion);
#pragma linkage(M_ShrFolderNewClass, system)

/*
 * Declare the class data structure
 */
SOMEXTERN struct M_ShrFolderClassDataStructure {
    SOMAny *classObject;
} M_ShrFolderClassData;

/*
 * Declare the C specific class data structure
 */
SOMEXTERN struct M_ShrFolderCClassDataStructure {
    somMethodTab *parentMtab;
    somDToken instanceDataToken;
} M_ShrFolderCClassData;

#endif       /* shrfoldr_h */
